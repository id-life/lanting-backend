/**
 * 项目通用响应类型定义
 * 该文件包含了所有 Controller 的数据响应格式类型定义
 *
 * 包含的 Controller:
 * - AppController: 应用基础接口（健康检查等）
 * - ArchivesController: 归档管理相关接口
 * - TributeController: 贡献内容提取相关接口
 *
 * 类型分类:
 * - 基础响应类型：通用的成功/失败响应格式
 * - 实体类型：数据库实体对应的类型
 * - API响应类型：各个接口的具体响应类型
 * - 请求体类型：客户端请求参数类型
 * - 错误响应类型：各种错误情况的响应类型
 *
 * @author Generated by AI Assistant
 * @date 2025-07-08
 */

// ============ 基础类型定义 ============

/**
 * 通用成功响应格式
 */
export interface SuccessResponse<T = any> {
  success: true
  data: T
  message?: string
}

/**
 * 通用错误响应格式
 */
export interface ErrorResponse {
  success: false
  data: null
  message: string
}

/**
 * 通用响应类型
 */
export type BaseResponse<T = any> = SuccessResponse<T> | ErrorResponse

/**
 * 健康检查响应
 */
export interface HealthResponse {
  status: "ok"
  message: string
}

// ============ 实体类型定义 ============

/**
 * 作者实体
 */
export interface ArchiveAuthor {
  id: number
  name: string
}

/**
 * 出版方/来源 实体
 */
export interface ArchivePublisher {
  id: number
  name: string
}

/**
 * 日期实体
 */
export interface ArchiveDate {
  id: number
  value: string
}

/**
 * 标签实体
 */
export interface ArchiveTag {
  id: number
  name: string
}

/**
 * 原始文件实体
 */
export interface ArchiveOrig {
  id: number
  originalUrl: string | null
  storageUrl: string
  fileType: string | null
  storageType: string
}

/**
 * 评论实体
 */
export interface ArchiveComment {
  id: number
  nickname: string
  content: string
  archiveId: number
  createdAt: string
  updatedAt: string
}

/**
 * 搜索关键词实体
 */
export interface SearchKeyword {
  id: number
  keyword: string
  searchCount: number
  createdAt: string
  updatedAt: string
}

/**
 * 搜索关键词响应实体（不包含时间字段）
 */
export interface SearchKeywordResponse {
  id: number
  keyword: string
  searchCount: number
}

/**
 * 归档实体
 */
export interface Archive {
  id: number
  title: string
  authors: ArchiveAuthor[]
  publisher: ArchivePublisher | null
  date: ArchiveDate | null
  chapter: string
  tags: ArchiveTag[]
  remarks: string | null
  origs: ArchiveOrig[]
  likes: number
}

/**
 * 归档详情（包含评论信息）
 */
export interface ArchiveDetail extends Archive {
  commentsCount?: number
  comments?: ArchiveComment[]
}

// ============ Tribute 相关类型 ============

/**
 * 关键词对象
 */
export interface Keywords {
  predefined: string[]
  extracted: string[]
}

/**
 * Tribute 信息
 */
export interface TributeInfo {
  title?: string
  author?: string
  publisher?: string
  date?: string
  summary?: string
  keywords?: Keywords
}

/**
 * HTML 提取结果
 */
export interface HtmlExtractResult {
  title?: string
  author?: string
  publisher?: string
  date?: string
  summary?: string
  keywords: Keywords
}

// ============ API 响应类型定义 ============

// App Controller 响应
export type AppHelloResponse = string
export type AppHealthResponse = HealthResponse

// Archives Controller 响应
export type CreateArchiveResponse = SuccessResponse<Archive>
export type FindAllArchivesResponse = SuccessResponse<Archive[]> & {
  count: number
}
export type GetValidChaptersResponse = SuccessResponse<string[]>
export type FindOneArchiveResponse = SuccessResponse<ArchiveDetail>
export type UpdateArchiveResponse = SuccessResponse<Archive>
export type RemoveArchiveResponse = SuccessResponse<null>

/**
 * 点赞操作响应数据
 */
export interface LikeArchiveData {
  id: number
  likes: number
}
export type LikeArchiveResponse = SuccessResponse<LikeArchiveData>

export type GetArchiveContentResponse = string

// 评论相关响应
export type CreateCommentResponse = SuccessResponse<ArchiveComment>

/**
 * 获取评论列表响应数据
 */
export interface GetCommentsData extends SuccessResponse<ArchiveComment[]> {
  count: number
}
export type GetCommentsResponse = GetCommentsData | ErrorResponse

export type UpdateCommentResponse = SuccessResponse<ArchiveComment>

/**
 * 删除评论响应数据
 */
export type DeleteCommentResponse = SuccessResponse<null> | ErrorResponse

// 搜索关键词相关响应
export type RecordSearchKeywordResponse = SuccessResponse<SearchKeyword>
export type GetSearchKeywordsResponse = SuccessResponse<SearchKeywordResponse[]>

// Tribute Controller 响应
export type GetTributeInfoResponse = SuccessResponse<TributeInfo>
export type ExtractHtmlResponse = SuccessResponse<HtmlExtractResult>

// ============ 分页相关类型 ============

/**
 * 分页查询参数
 */
export interface PaginationQuery {
  page?: number
  limit?: number
  sortBy?: string
  order?: "asc" | "desc"
}

/**
 * 分页响应数据
 */
export interface PaginationData<T> {
  items: T[]
  total: number
  page: number
  limit: number
  totalPages: number
}

/**
 * 分页响应
 */
export type PaginationResponse<T> = SuccessResponse<PaginationData<T>>

// ============ 错误响应类型 ============

/**
 * 验证错误响应
 */
export interface ValidationErrorResponse extends ErrorResponse {
  message: string // 如: "Validation failed: nickname should not be empty"
}

/**
 * 资源未找到错误响应
 */
export interface NotFoundErrorResponse extends ErrorResponse {
  message: string // 如: "Archive with ID 123 not found"
}

/**
 * 内部服务器错误响应
 */
export interface InternalServerErrorResponse extends ErrorResponse {
  message: string // 如: "Failed to fetch tribute info: ..."
}

// ============ 请求体类型（可选，用于客户端） ============

/**
 * 创建归档请求体
 */
export interface CreateArchiveRequest {
  title: string
  authors?: string[]
  publisher?: string
  date?: string
  chapter: string
  tag?: string[]
  remarks?: string
  originalUrl?: string
}

/**
 * 更新归档请求体
 */
export interface UpdateArchiveRequest extends Partial<CreateArchiveRequest> {}

/**
 * 创建评论请求体
 */
export interface CreateCommentRequest {
  nickname: string
  content: string
}

/**
 * 更新评论请求体
 */
export interface UpdateCommentRequest extends Partial<CreateCommentRequest> {}

/**
 * 点赞请求体
 */
export interface LikeArchiveRequest {
  liked: boolean
}

/**
 * 搜索关键词请求体
 */
export interface SearchKeywordRequest {
  keyword: string
}

// ============ 导出所有类型 ============
export * from "./src/archives/entities/archive-author.entity"
export * from "./src/archives/entities/archive-orig.entity"
export * from "./src/archives/entities/archive.entity"
export * from "./src/archives/entities/author.entity"
export * from "./src/archives/entities/comment.entity"
export * from "./src/archives/entities/search-keyword.entity"
